import java.util.stream.IntStream;

class Main {
    static long countTwinPrimes(int n) {
        return IntStream.rangeClosed(2, n)
            .filter(x -> isTwinPrime(x))
            .count();
    }

    static boolean isTwinPrime(int n) {
        return isPrime(n) && (isPrime(n + 2) || isPrime(n - 2));    
    }

    static boolean isPrime(int n) {
        return n > 1 && IntStream.range(2, (int) Math.sqrt(n) + 1)
            .noneMatch(x -> n % x == 0);
    }

    static String reverse(String str) {
        return str.chars()
            .mapToObj(x -> (char) x)
            .reduce("", (string, chr) -> chr + string, (str1, str2) -> str2 + str1);
    }

    static int countRepeats(int... array) {
        boolean flag = false;
        int current = -1;
        int total = 0;
        for (int el: array) {
            if (el != current) {
                current = el;
                flag = false;
                if (flag) {
                    total += 1;
                }
            } else if (el == current) {
                flag = true;
            }
            System.out.println(el + " " + total + " "  + current);
        }
        return total;
    }
}
